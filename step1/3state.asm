DATA SEGMENT
    PORTA     EQU 80H
    PORTB     EQU 82H
    PORTC     EQU 84H
    PORT_CON  EQU 86H
DATA ENDS

CODE SEGMENT
    ASSUME CS:CODE, DS:DATA

START:
    MOV AX, DATA
    MOV DS, AX

    MOV DX, PORT_CON
    MOV AL, 10000010B
    OUT DX, AL

MAIN_LOOP:
    CALL COUNT_DOOR
    MOV BL, AL

    IN AL, PORTA
    AND AL, 11110000B
    MOV AH, AL

    MOV AL, BL
    AND AL, 00001111B
    OR AL, AH
    OUT PORTA, AL

    CMP BL, 6
    JE LED_GREEN
    CMP BL, 3
    JAE LED_YELLOW
    JMP LED_RED

LED_GREEN:
    IN AL, PORTA
    OR AL, 01000000B
    OUT PORTA, AL
    JMP SAFETY_CHECK

LED_YELLOW:
    IN AL, PORTA
    OR AL, 10000000B
    OUT PORTA, AL
    JMP SAFETY_CHECK

LED_RED:
    IN AL, PORTA
    OR AL, 00100000B
    OUT PORTA, AL

SAFETY_CHECK:
    CALL SAFETY
    CMP AL, 0
    JE SAFE
    IN AL, PORTB
    OR AL, 01000000B
    OUT PORTB, AL
    JMP LOOP_EXIT

SAFE:
    IN AL, PORTB
    AND AL, 10111111B
    OUT PORTB, AL

LOOP_EXIT:
    CALL DELAY
    JMP MAIN_LOOP

COUNT_DOOR PROC
    MOV DX, PORTB
    IN AL, DX
    MOV BL, 0
    MOV CX, 6
COUNT_LOOP:
    SHR AL, 1
    JNC SKIP
    INC BL
SKIP:
    LOOP COUNT_LOOP
    MOV AL, BL
    RET
COUNT_DOOR ENDP

SAFETY PROC
    MOV DX, PORTB
    IN AL, DX
    SHR AL, 5
    JC NOT_SAFE_LABEL
    MOV AL, 0
    RET
NOT_SAFE_LABEL:
    MOV AL, 1
    RET
SAFETY ENDP

DELAY PROC
    MOV CX, 0FFFFH
DELAY_LOOP:
    LOOP DELAY_LOOP
    RET
DELAY ENDP

CODE ENDS
END START
